local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "torre deBrainrot Hub " .. Fluent.Version,
    SubTitle = "by slamnnaosei8",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Principal", Icon = "home" }),
    Settings = Window:AddTab({ Title = "Configura√ß√µes", Icon = "settings" })
}

local Options = Fluent.Options

local isProcessing = false
local lastClickTime = 0
local cooldownTime = 0.5

do
    Fluent:Notify({
        Title = "Brainrot Hub",
        Content = "Script carregado com sucesso!",
        Duration = 5
    })

    Tabs.Main:AddParagraph({
        Title = "Bem-vindo!",
        Content = "Use o bot√£o abaixo para pegar um brainrot aleat√≥rio.\n√Äs vezes pode bugar e n√£o deixar trocar!"
    })

    Tabs.Main:AddButton({
        Title = "Pegar Brainrot Aleat√≥rio",
        Description = "Clique para abrir um Lucky Block (pode bugar)",
        Callback = function()
            local currentTime = tick()
            
            if isProcessing or (currentTime - lastClickTime) < cooldownTime then
                Fluent:Notify({
                    Title = "Aguarde!",
                    Content = "Espere um pouco antes de clicar novamente...",
                    Duration = 2
                })
                return
            end
            
            isProcessing = true
            lastClickTime = currentTime
            
            local success, err = pcall(function()
                game:GetService("ReplicatedStorage").Events.LuckyBlockOpen:FireServer()
            end)
            
            if success then
                Fluent:Notify({
                    Title = "Sucesso!",
                    Content = "Brainrot solicitado! Aguarde...",
                    Duration = 3
                })
            else
                Fluent:Notify({
                    Title = "Erro!",
                    Content = "N√£o foi poss√≠vel pegar o brainrot: " .. tostring(err),
                    Duration = 4
                })
            end
            
            task.wait(cooldownTime)
            isProcessing = false
        end
    })

    Tabs.Main:AddParagraph({
        Title = "üìñ Tutorial",
        Content = "Para clicar v√°rias vezes, quando clicar a primeira vez, desequipe o morph e clique no bot√£o, e desequipe o brainrot novo e assim vai."
    })
end

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})

InterfaceManager:SetFolder("BrainrotHub")
SaveManager:SetFolder("BrainrotHub/config")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Pronto!",
    Content = "Voc√™ j√° pode come√ßar a usar o script.",
    Duration = 5
})

SaveManager:LoadAutoloadConfig()
